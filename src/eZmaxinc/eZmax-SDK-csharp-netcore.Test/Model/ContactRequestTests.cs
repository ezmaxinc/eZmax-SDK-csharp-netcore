/*
 * eZmax API Definition
 *
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
 *
 * The version of the OpenAPI document: 1.0.12
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using eZmaxinc/eZmax-SDK-csharp-netcore.Api;
using eZmaxinc/eZmax-SDK-csharp-netcore.Model;
using eZmaxinc/eZmax-SDK-csharp-netcore.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace eZmaxinc/eZmax-SDK-csharp-netcore.Test
{
    /// <summary>
    ///  Class for testing ContactRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ContactRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ContactRequest
        //private ContactRequest instance;

        public ContactRequestTests()
        {
            // TODO uncomment below to create an instance of ContactRequest
            //instance = new ContactRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ContactRequest
        /// </summary>
        [Fact]
        public void ContactRequestInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ContactRequest
            //Assert.IsInstanceOfType<ContactRequest> (instance, "variable 'instance' is a ContactRequest");
        }


        /// <summary>
        /// Test the property 'fkiContacttitleID'
        /// </summary>
        [Fact]
        public void fkiContacttitleIDTest()
        {
            // TODO unit test for the property 'fkiContacttitleID'
        }
        /// <summary>
        /// Test the property 'fkiLanguageID'
        /// </summary>
        [Fact]
        public void fkiLanguageIDTest()
        {
            // TODO unit test for the property 'fkiLanguageID'
        }
        /// <summary>
        /// Test the property 'sContactFirstname'
        /// </summary>
        [Fact]
        public void sContactFirstnameTest()
        {
            // TODO unit test for the property 'sContactFirstname'
        }
        /// <summary>
        /// Test the property 'sContactLastname'
        /// </summary>
        [Fact]
        public void sContactLastnameTest()
        {
            // TODO unit test for the property 'sContactLastname'
        }
        /// <summary>
        /// Test the property 'sContactCompany'
        /// </summary>
        [Fact]
        public void sContactCompanyTest()
        {
            // TODO unit test for the property 'sContactCompany'
        }
        /// <summary>
        /// Test the property 'dtContactBirthdate'
        /// </summary>
        [Fact]
        public void dtContactBirthdateTest()
        {
            // TODO unit test for the property 'dtContactBirthdate'
        }

    }

}
