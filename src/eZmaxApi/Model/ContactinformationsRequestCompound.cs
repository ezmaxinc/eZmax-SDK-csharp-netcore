/*
 * eZmax API Definition
 *
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.0.44
 * Contact: support-api@ezmax.ca
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = eZmaxApi.Client.OpenAPIDateConverter;

namespace eZmaxApi.Model
{
    /// <summary>
    /// A Contactinformations Object and children to create a complete structure
    /// </summary>
    [DataContract(Name = "contactinformations-RequestCompound")]
    public partial class ContactinformationsRequestCompound : IEquatable<ContactinformationsRequestCompound>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContactinformationsRequestCompound" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ContactinformationsRequestCompound() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ContactinformationsRequestCompound" /> class.
        /// </summary>
        /// <param name="aObjAddress">aObjAddress (required).</param>
        /// <param name="aObjPhone">aObjPhone (required).</param>
        /// <param name="aObjEmail">aObjEmail (required).</param>
        /// <param name="aObjWebsite">aObjWebsite (required).</param>
        /// <param name="iAddressDefault">The index in the a_objAddress array (zero based index) representing the Address object that should become the default one.  You can leave the value to 0 if the array is empty. (required).</param>
        /// <param name="iPhoneDefault">The index in the a_objPhone array (zero based index) representing the Phone object that should become the default one.  You can leave the value to 0 if the array is empty. (required).</param>
        /// <param name="iEmailDefault">The index in the a_objEmail array (zero based index) representing the Email object that should become the default one.  You can leave the value to 0 if the array is empty. (required).</param>
        /// <param name="iWebsiteDefault">The index in the a_objWebsite array (zero based index) representing the Website object that should become the default one.  You can leave the value to 0 if the array is empty. (required).</param>
        public ContactinformationsRequestCompound(List<AddressRequest> aObjAddress = default(List<AddressRequest>), List<PhoneRequest> aObjPhone = default(List<PhoneRequest>), List<EmailRequest> aObjEmail = default(List<EmailRequest>), List<WebsiteRequest> aObjWebsite = default(List<WebsiteRequest>), int iAddressDefault = default(int), int iPhoneDefault = default(int), int iEmailDefault = default(int), int iWebsiteDefault = default(int))
        {
            // to ensure "aObjAddress" is required (not null)
            this.AObjAddress = aObjAddress ?? throw new ArgumentNullException("aObjAddress is a required property for ContactinformationsRequestCompound and cannot be null");
            // to ensure "aObjPhone" is required (not null)
            this.AObjPhone = aObjPhone ?? throw new ArgumentNullException("aObjPhone is a required property for ContactinformationsRequestCompound and cannot be null");
            // to ensure "aObjEmail" is required (not null)
            this.AObjEmail = aObjEmail ?? throw new ArgumentNullException("aObjEmail is a required property for ContactinformationsRequestCompound and cannot be null");
            // to ensure "aObjWebsite" is required (not null)
            this.AObjWebsite = aObjWebsite ?? throw new ArgumentNullException("aObjWebsite is a required property for ContactinformationsRequestCompound and cannot be null");
            this.IAddressDefault = iAddressDefault;
            this.IPhoneDefault = iPhoneDefault;
            this.IEmailDefault = iEmailDefault;
            this.IWebsiteDefault = iWebsiteDefault;
        }

        /// <summary>
        /// Gets or Sets AObjAddress
        /// </summary>
        [DataMember(Name = "a_objAddress", IsRequired = true, EmitDefaultValue = false)]
        public List<AddressRequest> AObjAddress { get; set; }

        /// <summary>
        /// Gets or Sets AObjPhone
        /// </summary>
        [DataMember(Name = "a_objPhone", IsRequired = true, EmitDefaultValue = false)]
        public List<PhoneRequest> AObjPhone { get; set; }

        /// <summary>
        /// Gets or Sets AObjEmail
        /// </summary>
        [DataMember(Name = "a_objEmail", IsRequired = true, EmitDefaultValue = false)]
        public List<EmailRequest> AObjEmail { get; set; }

        /// <summary>
        /// Gets or Sets AObjWebsite
        /// </summary>
        [DataMember(Name = "a_objWebsite", IsRequired = true, EmitDefaultValue = false)]
        public List<WebsiteRequest> AObjWebsite { get; set; }

        /// <summary>
        /// The index in the a_objAddress array (zero based index) representing the Address object that should become the default one.  You can leave the value to 0 if the array is empty.
        /// </summary>
        /// <value>The index in the a_objAddress array (zero based index) representing the Address object that should become the default one.  You can leave the value to 0 if the array is empty.</value>
        [DataMember(Name = "iAddressDefault", IsRequired = true, EmitDefaultValue = false)]
        public int IAddressDefault { get; set; }

        /// <summary>
        /// The index in the a_objPhone array (zero based index) representing the Phone object that should become the default one.  You can leave the value to 0 if the array is empty.
        /// </summary>
        /// <value>The index in the a_objPhone array (zero based index) representing the Phone object that should become the default one.  You can leave the value to 0 if the array is empty.</value>
        [DataMember(Name = "iPhoneDefault", IsRequired = true, EmitDefaultValue = false)]
        public int IPhoneDefault { get; set; }

        /// <summary>
        /// The index in the a_objEmail array (zero based index) representing the Email object that should become the default one.  You can leave the value to 0 if the array is empty.
        /// </summary>
        /// <value>The index in the a_objEmail array (zero based index) representing the Email object that should become the default one.  You can leave the value to 0 if the array is empty.</value>
        [DataMember(Name = "iEmailDefault", IsRequired = true, EmitDefaultValue = false)]
        public int IEmailDefault { get; set; }

        /// <summary>
        /// The index in the a_objWebsite array (zero based index) representing the Website object that should become the default one.  You can leave the value to 0 if the array is empty.
        /// </summary>
        /// <value>The index in the a_objWebsite array (zero based index) representing the Website object that should become the default one.  You can leave the value to 0 if the array is empty.</value>
        [DataMember(Name = "iWebsiteDefault", IsRequired = true, EmitDefaultValue = false)]
        public int IWebsiteDefault { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ContactinformationsRequestCompound {\n");
            sb.Append("  AObjAddress: ").Append(AObjAddress).Append("\n");
            sb.Append("  AObjPhone: ").Append(AObjPhone).Append("\n");
            sb.Append("  AObjEmail: ").Append(AObjEmail).Append("\n");
            sb.Append("  AObjWebsite: ").Append(AObjWebsite).Append("\n");
            sb.Append("  IAddressDefault: ").Append(IAddressDefault).Append("\n");
            sb.Append("  IPhoneDefault: ").Append(IPhoneDefault).Append("\n");
            sb.Append("  IEmailDefault: ").Append(IEmailDefault).Append("\n");
            sb.Append("  IWebsiteDefault: ").Append(IWebsiteDefault).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ContactinformationsRequestCompound);
        }

        /// <summary>
        /// Returns true if ContactinformationsRequestCompound instances are equal
        /// </summary>
        /// <param name="input">Instance of ContactinformationsRequestCompound to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ContactinformationsRequestCompound input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AObjAddress == input.AObjAddress ||
                    this.AObjAddress != null &&
                    input.AObjAddress != null &&
                    this.AObjAddress.SequenceEqual(input.AObjAddress)
                ) && 
                (
                    this.AObjPhone == input.AObjPhone ||
                    this.AObjPhone != null &&
                    input.AObjPhone != null &&
                    this.AObjPhone.SequenceEqual(input.AObjPhone)
                ) && 
                (
                    this.AObjEmail == input.AObjEmail ||
                    this.AObjEmail != null &&
                    input.AObjEmail != null &&
                    this.AObjEmail.SequenceEqual(input.AObjEmail)
                ) && 
                (
                    this.AObjWebsite == input.AObjWebsite ||
                    this.AObjWebsite != null &&
                    input.AObjWebsite != null &&
                    this.AObjWebsite.SequenceEqual(input.AObjWebsite)
                ) && 
                (
                    this.IAddressDefault == input.IAddressDefault ||
                    this.IAddressDefault.Equals(input.IAddressDefault)
                ) && 
                (
                    this.IPhoneDefault == input.IPhoneDefault ||
                    this.IPhoneDefault.Equals(input.IPhoneDefault)
                ) && 
                (
                    this.IEmailDefault == input.IEmailDefault ||
                    this.IEmailDefault.Equals(input.IEmailDefault)
                ) && 
                (
                    this.IWebsiteDefault == input.IWebsiteDefault ||
                    this.IWebsiteDefault.Equals(input.IWebsiteDefault)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AObjAddress != null)
                    hashCode = hashCode * 59 + this.AObjAddress.GetHashCode();
                if (this.AObjPhone != null)
                    hashCode = hashCode * 59 + this.AObjPhone.GetHashCode();
                if (this.AObjEmail != null)
                    hashCode = hashCode * 59 + this.AObjEmail.GetHashCode();
                if (this.AObjWebsite != null)
                    hashCode = hashCode * 59 + this.AObjWebsite.GetHashCode();
                hashCode = hashCode * 59 + this.IAddressDefault.GetHashCode();
                hashCode = hashCode * 59 + this.IPhoneDefault.GetHashCode();
                hashCode = hashCode * 59 + this.IEmailDefault.GetHashCode();
                hashCode = hashCode * 59 + this.IWebsiteDefault.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
